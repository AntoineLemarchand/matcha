events {}

http {
    limit_req_zone $binary_remote_addr zone=one:10m rate=4r/s;
    limit_req_status 429;
    access_log off;
    error_log off;

    server {
        listen 80;
        resolver 127.0.0.11;

        # Optional: Redirect all HTTP traffic to HTTPS
        # Uncomment the line below if you want to enforce HTTPS by redirecting all HTTP traffic
        return 301 https://$host$request_uri;

        set $front 'client:${SERVER_PORT}';
        set $api 'server:3000';

        location ^~ /api/ {
            proxy_pass http://$api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            client_max_body_size 20M;
        }

        location / {
            proxy_pass http://$front;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # HTTPS server configuration
    server {
        listen 443 ssl;
        resolver 127.0.0.11;

        ssl_certificate /etc/nginx/ssl/certs/matcha.crt;
        ssl_certificate_key /etc/nginx/ssl/private/matcha.key;

        # Strong SSL settings - these are suggested settings but you might need to adjust them for your needs
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;

        set $front 'client:${SERVER_PORT}';
        set $api 'server:3000';

        location ^~ /api/ {
            proxy_pass http://$api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            client_max_body_size 20M;
        }

        location / {
            proxy_pass http://$front;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
